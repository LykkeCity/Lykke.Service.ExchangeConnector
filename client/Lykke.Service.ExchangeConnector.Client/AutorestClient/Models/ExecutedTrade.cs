// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.ExchangeConnector.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ExecutedTrade
    {
        /// <summary>
        /// Initializes a new instance of the ExecutedTrade class.
        /// </summary>
        public ExecutedTrade()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExecutedTrade class.
        /// </summary>
        /// <param name="type">Possible values include: 'Unknown', 'Buy',
        /// 'Sell'</param>
        /// <param name="status">Possible values include: 'Unknown', 'Fill',
        /// 'PartialFill', 'Cancelled', 'Rejected', 'New', 'Pending'</param>
        public ExecutedTrade(Instrument instrument = default(Instrument), TradeType? type = default(TradeType?), System.DateTime? time = default(System.DateTime?), double? price = default(double?), double? volume = default(double?), double? fee = default(double?), string orderId = default(string), ExecutionStatus? status = default(ExecutionStatus?), string message = default(string))
        {
            Instrument = instrument;
            Type = type;
            Time = time;
            Price = price;
            Volume = volume;
            Fee = fee;
            OrderId = orderId;
            Status = status;
            Message = message;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "instrument")]
        public Instrument Instrument { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Unknown', 'Buy', 'Sell'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public TradeType? Type { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "time")]
        public System.DateTime? Time { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "price")]
        public double? Price { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "volume")]
        public double? Volume { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fee")]
        public double? Fee { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "orderId")]
        public string OrderId { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Unknown', 'Fill', 'PartialFill',
        /// 'Cancelled', 'Rejected', 'New', 'Pending'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public ExecutionStatus? Status { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

    }
}
