// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.ExchangeConnector.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class OrderModel
    {
        /// <summary>
        /// Initializes a new instance of the OrderModel class.
        /// </summary>
        public OrderModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OrderModel class.
        /// </summary>
        /// <param name="tradeType">Possible values include: 'Unknown', 'Buy',
        /// 'Sell'</param>
        /// <param name="orderType">Possible values include: 'Unknown',
        /// 'Market', 'Limit'</param>
        /// <param name="timeInForce">Possible values include:
        /// 'GoodTillCancel', 'FillOrKill'</param>
        /// <param name="dateTime">Date and time must be in 5 minutes threshold
        /// from UTC now</param>
        public OrderModel(TradeType tradeType, OrderType orderType, TimeInForce timeInForce, double volume, System.DateTime dateTime, string exchangeName = default(string), string instrument = default(string), double? price = default(double?))
        {
            ExchangeName = exchangeName;
            Instrument = instrument;
            TradeType = tradeType;
            OrderType = orderType;
            TimeInForce = timeInForce;
            Price = price;
            Volume = volume;
            DateTime = dateTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exchangeName")]
        public string ExchangeName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "instrument")]
        public string Instrument { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown', 'Buy', 'Sell'
        /// </summary>
        [JsonProperty(PropertyName = "tradeType")]
        public TradeType TradeType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown', 'Market', 'Limit'
        /// </summary>
        [JsonProperty(PropertyName = "orderType")]
        public OrderType OrderType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'GoodTillCancel',
        /// 'FillOrKill'
        /// </summary>
        [JsonProperty(PropertyName = "timeInForce")]
        public TimeInForce TimeInForce { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "price")]
        public double? Price { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "volume")]
        public double Volume { get; set; }

        /// <summary>
        /// Gets or sets date and time must be in 5 minutes threshold from UTC
        /// now
        /// </summary>
        [JsonProperty(PropertyName = "dateTime")]
        public System.DateTime DateTime { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Price < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "Price", 0);
            }
        }
    }
}
