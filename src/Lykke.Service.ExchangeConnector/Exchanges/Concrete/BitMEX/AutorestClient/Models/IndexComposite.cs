// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace TradingBot.Exchanges.Concrete.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class IndexComposite
    {
        /// <summary>
        /// Initializes a new instance of the IndexComposite class.
        /// </summary>
        public IndexComposite()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IndexComposite class.
        /// </summary>
        public IndexComposite(System.DateTime timestamp, string symbol = default(string), string indexSymbol = default(string), string reference = default(string), double? lastPrice = default(double?), double? weight = default(double?), System.DateTime? logged = default(System.DateTime?))
        {
            Timestamp = timestamp;
            Symbol = symbol;
            IndexSymbol = indexSymbol;
            Reference = reference;
            LastPrice = lastPrice;
            Weight = weight;
            Logged = logged;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime Timestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "symbol")]
        public string Symbol { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "indexSymbol")]
        public string IndexSymbol { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reference")]
        public string Reference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastPrice")]
        public double? LastPrice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "weight")]
        public double? Weight { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "logged")]
        public System.DateTime? Logged { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
