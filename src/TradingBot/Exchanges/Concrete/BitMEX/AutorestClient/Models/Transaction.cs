// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace TradingBot.Exchanges.Concrete.AutorestClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Transaction
    {
        /// <summary>
        /// Initializes a new instance of the Transaction class.
        /// </summary>
        public Transaction()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Transaction class.
        /// </summary>
        public Transaction(string transactID, double? account = default(double?), string currency = default(string), string transactType = default(string), double? amount = default(double?), double? fee = default(double?), string transactStatus = default(string), string address = default(string), string tx = default(string), string text = default(string), System.DateTime? transactTime = default(System.DateTime?), System.DateTime? timestamp = default(System.DateTime?))
        {
            TransactID = transactID;
            Account = account;
            Currency = currency;
            TransactType = transactType;
            Amount = amount;
            Fee = fee;
            TransactStatus = transactStatus;
            Address = address;
            Tx = tx;
            Text = text;
            TransactTime = transactTime;
            Timestamp = timestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactID")]
        public string TransactID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account")]
        public double? Account { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currency")]
        public string Currency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactType")]
        public string TransactType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public double? Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fee")]
        public double? Fee { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactStatus")]
        public string TransactStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address")]
        public string Address { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tx")]
        public string Tx { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "text")]
        public string Text { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactTime")]
        public System.DateTime? TransactTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime? Timestamp { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TransactID == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TransactID");
            }
        }
    }
}
