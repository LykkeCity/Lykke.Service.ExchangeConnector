// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using Microsoft.Rest;
using Newtonsoft.Json;

namespace Lykke.ExternalExchangesApi.Exchanges.BitMex.AutorestClient.Models
{
    /// <summary>
    /// Trollbox Data
    /// </summary>
    public partial class Chat
    {
        /// <summary>
        /// Initializes a new instance of the Chat class.
        /// </summary>
        public Chat()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Chat class.
        /// </summary>
        public Chat(System.DateTime date, string user, string message, string html, double? id = default(double?), bool? fromBot = default(bool?), double? channelID = default(double?))
        {
            Id = id;
            Date = date;
            User = user;
            Message = message;
            Html = html;
            FromBot = fromBot;
            ChannelID = channelID;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public double? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public System.DateTime Date { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "user")]
        public string User { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "html")]
        public string Html { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fromBot")]
        public bool? FromBot { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "channelID")]
        public double? ChannelID { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (User == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "User");
            }
            if (Message == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Message");
            }
            if (Html == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Html");
            }
        }
    }
}
